{"version":3,"sources":["img/logo.png","components/SelectOption.js","components/Select.js","components/Footer.js","components/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SelectOption","_ref","value","currency","react_default","a","createElement","Select","option","action","name","onChange","components_SelectOption","Footer","date","Date","getFullYear","className","href","target","Index","state","data","query","amount","from","to","total","showResult","handleChange","e","_this$setState","_this","setState","Object","defineProperty","handleSubmit","preventDefault","getData","axios","get","concat","then","res","rates","calculateResult","baseValue","parseInt","countValue","toFixed","console","log","_this2","this","calculate","displayAmount","displayFrom","displayTo","displayTotal","isNaN","react","src","Logo","alt","onSubmit","htmlFor","type","autoComplete","components_Select","components_Footer","Component","App","components_Index","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.baf69140.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c96eaca.png\";","import React from 'react';\r\n\r\nconst SelectOption = ({ value, currency }) => {\r\n    return (\r\n        <option value={value}>{currency}</option>\r\n    )\r\n}\r\n\r\nexport default SelectOption\r\n","import React from 'react';\r\nimport SelectOption from './SelectOption';\r\n\r\nconst Select = ({ option, action }) => {\r\n    return (\r\n        <select name={option} onChange={action}>\r\n\r\n            <SelectOption value=\"\" currency=\"Select an option\" />\r\n\r\n            <SelectOption value=\"AUD\" currency=\"Australian Dollar\" />\r\n            <SelectOption value=\"BGN\" currency=\"Bulgarian Lev\" />\r\n            <SelectOption value=\"BRL\" currency=\"Brazilian Real\" />\r\n            <SelectOption value=\"CAD\" currency=\"Canada Dollar\" />\r\n            <SelectOption value=\"CHF\" currency=\"Swiss Franc\" />\r\n            <SelectOption value=\"CNY\" currency=\"Chinese Yuan Renminbi\" />\r\n            <SelectOption value=\"CZK\" currency=\"Czech Koruna\" />\r\n            <SelectOption value=\"DKK\" currency=\"Danish Krone\" />\r\n            <SelectOption value=\"EUR\" currency=\"European Euro\" />\r\n            <SelectOption value=\"GBP\" currency=\"British Pound\" />\r\n            <SelectOption value=\"HKD\" currency=\"Hong Kong Dollar\" />\r\n            <SelectOption value=\"HRK\" currency=\"Croatian Kuna\" />\r\n            <SelectOption value=\"HUF\" currency=\"Hungarian Forint\" />\r\n            <SelectOption value=\"IDR\" currency=\"Indonesian Rupiah\" />\r\n            <SelectOption value=\"ILS\" currency=\"Israeli Shekel\" />\r\n            <SelectOption value=\"INR\" currency=\"Indian Rupee\" />\r\n            <SelectOption value=\"ISK\" currency=\"Icelandic Krona\" />\r\n            <SelectOption value=\"JPY\" currency=\"Japanese Yen\" />\r\n            <SelectOption value=\"KRW\" currency=\"South Korean Won\" />\r\n            <SelectOption value=\"MXN\" currency=\"Mexican Peso\" />\r\n            <SelectOption value=\"MYR\" currency=\"Malaysian Ringgit\" />\r\n            <SelectOption value=\"NOK\" currency=\"Norwegian Krone\" />\r\n            <SelectOption value=\"NZD\" currency=\"New Zealand Dollar\" />\r\n            <SelectOption value=\"PHP\" currency=\"Philippine Peso\" />\r\n            <SelectOption value=\"PLN\" currency=\"Polish Zloty\" />\r\n            <SelectOption value=\"RON\" currency=\"Romanian Leu\" />\r\n            <SelectOption value=\"RUB\" currency=\"Russian Ruble\" />\r\n            <SelectOption value=\"SEK\" currency=\"Swedish Krona\" />\r\n            <SelectOption value=\"SGD\" currency=\"Singapore Dollar\" />\r\n            <SelectOption value=\"THB\" currency=\"Thai Baht\" />\r\n            <SelectOption value=\"TRY\" currency=\"Turkish Lira\" />\r\n            <SelectOption value=\"USD\" currency=\"US Dollar\" />\r\n            <SelectOption value=\"ZAR\" currency=\"South African Rand\" />\r\n\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    const date = new Date().getFullYear();\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h1 className=\"footer__title\">Developed by Daniel Ferreira - {date}</h1>\r\n            <div className=\"footer__social\">\r\n                <a href=\"https://twitter.com/danferreiradfs\" target=\"blank\" className=\"footer__social-icon\"><i className=\"fab fa-twitter-square\"></i></a>\r\n                <a href=\"https://github.com/danielferreiradf\" target=\"blank\" className=\"footer__social-icon\"><i className=\"fab fa-github-square\"></i></a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Select from './Select';\r\nimport Footer from './Footer';\r\n\r\nimport Logo from '../img/logo.png'\r\n\r\nclass Index extends Component {\r\n\r\n    state = {\r\n        currency: '',\r\n        data: [],\r\n        query: [],\r\n        amount: '',\r\n        from: '',\r\n        to: '',\r\n        total: '',\r\n        showResult: false\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`https://api.exchangeratesapi.io/latest?base=${this.state.from}`)\r\n            .then(res => this.setState({ query: res.data }))\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value, showResult: false, data: [] })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // axios.get(`https://api.exchangeratesapi.io/latest?base=${this.state.from}`)\r\n        //     .then(res => this.setState({ data: res.data.rates }))\r\n        //     .then(this.calculateResult());\r\n        this.getData()\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(`https://api.exchangeratesapi.io/latest?base=${this.state.from}`)\r\n            .then(res => this.setState({ data: res.data.rates }))\r\n            .then(this.calculateResult());\r\n    }\r\n\r\n\r\n    calculateResult = () => {\r\n        const baseValue = parseInt(this.state.amount);\r\n        const countValue = this.state.data[this.state.to];\r\n        this.setState({ total: ((baseValue * countValue).toFixed(2)), showResult: true })\r\n\r\n        console.log(baseValue, countValue)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state.query)\r\n        let calculate;\r\n        const displayAmount = this.state.amount;\r\n        const displayFrom = this.state.from;\r\n        const displayTo = this.state.to;\r\n        const displayTotal = this.state.total;\r\n\r\n        if (this.state.showResult && !isNaN(this.state.total)) {\r\n            calculate = (\r\n                <div className=\"converter__display\">\r\n                    <h3>{displayAmount}  {displayFrom}</h3>\r\n                    <h1>{displayTotal}</h1> <h2>  {displayTo}</h2>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"converter\">\r\n                    <div className=\"container\">\r\n\r\n                        <img src={Logo} alt=\"\" className=\"converter__logo\" />\r\n                        <p></p>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"converter__amount\">\r\n                                <label htmlFor=\"value\" className=\"converter__amount-label\">Amount</label>\r\n                                <input type=\"text\" name=\"amount\" autoComplete=\"off\" onChange={this.handleChange} value={this.state.amount} className=\"converter__amount-input\" />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"converter__options\">\r\n                                <div className=\"converter__select\">\r\n                                    <label htmlFor=\"selectFrom\" className=\"converter__amount-label-2\">From</label>\r\n                                    <Select name=\"selectFrom\" action={this.handleChange} option=\"from\" value={this.state.from} className=\"converter__select\" />\r\n                                </div>\r\n\r\n                                <div className=\"converter__select\">\r\n                                    <label htmlFor=\"selectTo\" className=\"converter__amount-label-2\">To</label>\r\n                                    <Select name=\"selectTo\" action={this.handleChange} option=\"to\" value={this.state.to} />\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"converter__button\">Convert</button>\r\n\r\n                            {calculate}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React, { Component } from 'react';\nimport Index from './components/Index';\n\nimport './styles/app.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Index />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}